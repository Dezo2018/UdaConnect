---
openapi: 3.0.0
info:
  title: Person Endpoints
  description: This is a person API
  version: 1.0.0
paths:
  /api/persons:
    get:
      tags:
      - gets people information
      summary: gets all people information
      description: |
        Gets the people information for all users in the PersonAPI
      operationId: getAllPersons
      responses:
        "200":
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person'
        "400":
          description: bad input parameter
        "404":
          description: company not found
    post:
      tags:
      - creates a new person
      summary: creates a new person record
      description: |
        By passing the correct payload, you can create a
        new person/user to the system
      operationId: createPerson
      requestBody:
        description: Optional description in *Markdown*
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonNoId'
        required: true
      responses:
        "201":
          description: created new person
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person'
        "400":
          description: bad input parameter
  /api/persons/{personId}:
    get:
      tags:
      - gets person by id
      summary: gets person information by id
      description: |
        Gets person information by id
      operationId: getPersonById
      parameters:
      - name: personId
        in: path
        description: Numeric ID of the user to get
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Person'
        "400":
          description: bad input parameter
        "404":
          description: company not found
components:
  schemas:
    Person:
      required:
      - company_name
      - first_name
      - id
      - last_name
      type: object
      properties:
        id:
          type: integer
          example: 1
        first_name:
          type: string
          example: Enanga
        last_name:
          type: string
          example: Madeng
        company_name:
          type: string
          example: Employer
    PersonNoId:
      required:
      - company_name
      - first_name
      - last_name
      type: object
      properties:
        first_name:
          type: string
          example: Enanga
        last_name:
          type: string
          example: Yolande
        company_name:
          type: string
          example: Epsilon
