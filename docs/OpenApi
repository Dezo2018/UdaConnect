openapi: 3.0.0
info:
  version: '1.0.0'
  title: 'Location_api'
  license:
    name: MIT
servers:
  - url: 'localhost:3000'
paths:
  /getperson/{personId}:
    get:
      summary: 'Sample endpoint: Returns details about a particular person'
      operationId: listPerson
      tags:
        - person
      parameters:
        - name: personId
          in: query
          description: ID of the person
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: 'Sample response: Details about a user by ID'
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/person'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
 /addperson :
      post:
      summary: Creates somebody tuple informations
      operationId: addPerson
      description: Registers a new person to the system
      responses:
        '201':
          description: Person created
        '400':
          description: Invalid input, object invalid
        '409':
          description: An existing tuple already exists for the same dude
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Persons'
            description: Registering a person 
  /locations:
    post:
      summary: Creates peoples locations
      operationId: addLocation
      description: Adds a new location to the system
      responses:
        '201':
          description: Location created
        '400':
          description: Invalid input, object invalid
        '409':
          description: An existing location already exists for the same dude
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Locations'
        description: Creating a new location for somebody
   /location/{locationId}:
    get:
      summary: 
      operationId: getLocation
      description: By passing in a location you can retrieve the location coordinates
      parameters:
        - in: path
          name: locationId
          schema:
            type: integer
          required: 41
          description: ID of the location to get
      responses:
        '200':
          description: Successfully retrieved a location
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationID'
        '404':
          description: Requested item location was not found
components:
  schemas:
    Person:
      type: object
      required:
        - personId
        - name
      properties:
        personId:
          type: integer
          format: int64
        name:
          type: string
        tag:
          type: string
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    Location:
      type: object
      required:
        - id
        - person_id
        - longitude
        - latitude
        - creation_time
      properties:
        id:
          type: integer
          example: 1
        person_id:
          type: integer
          example: 2
        longitude:
          type: string
          example: 77.0364 
        latitude:
         type: string
         example: 38.8951
        creation_time:
         type: Date
         example: 02/02/2022
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
security:
  - BasicAuth: []
