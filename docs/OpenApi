openapi: 3.0.0
info:
  description: Locating data from mobile devices.
  version: "1.0.0"
  title: Simple Inventory API
paths:
  /location/{locationId}:
    get:
      summary: 
      operationId: getLocation
      description: By passing in a location you can retrieve the location coordinates
      parameters:
        - in: path
          name: locationId
          schema:
            type: integer
          required: 41
          description: ID of the location to get
      responses:
        '200':
          description: Successfully retrieved a location
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationID'
        '404':
          description: Requested item location was not found
  /locations:
    post:
      summary: Creates peoples locations
      operationId: addLocation
      description: Adds a new location to the system
      responses:
        '201':
          description: Location created
        '400':
          description: Invalid input, object invalid
        '409':
          description: An existing location already exists for the same dude
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Locations'
        description: Creating a new location for somebody
   /person/{personId}
      get:
        summary:
        operationId: getPerson
        description: By passing it in a person you can get his full information
        parameters:
           -in: path
            name: personId
            schema:
              type: integer
              required: 14
              descriptioin: ID of the person to get
       responses:
        '200':
          description: Successfully retrieved a person
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/personID'
        '404':
          description: Requested person was not found
     /persons
      post:
      summary: Creates somebody tuple informations
      operationId: addPerson
      description: Registers a new person to the system
      responses:
        '201':
          description: Person created
        '400':
          description: Invalid input, object invalid
        '409':
          description: An existing tuple already exists for the same dude
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Persons'
        description: Registering somebody
      /person/{personId}/connection 
        get:
        summary:
        operationId: getPersonConnection
        description: By passing it in a person you can get his current location
        parameters:
           -in: path
            name: personId
            schema:
              type: integer
              required: 14
              descriptioin: ID of the person to get
       responses:
        '200':
          description: Successfully retrieved a person location
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/personID'
        '404':
          description: Requested person was not found
components:
  schemas:
    Locations:
      type: object
      required:
        - id
        - person_id
        - longitude
        - latitude
        - creation_time
      properties:
        id:
          type: integer
          example: 1
        person_id:
          type: integer
          example: 2
        longitude:
          type: string
          example: 77.0364 
        latitude:
         type: string
         example: 38.8951
        creation_time:
         type: Date
         example: 02/02/2022
     Persons : 
       type: object
       required: 
        - id
        - first_name
        - last_name
        - company_name
       properties:
        id:
          type: integer
          example: 1
        first_name:
          type: string
          example: Ojong
        last_name:
          type: string
          example: Rigobert
        company_name:
          type: string
          example: Hero Tech
      Connections 
        type: object
        required:
        - location
        - person
        properties:
          location:
           type: Locations
          person:
           type: Persons 
                
          
      	    
